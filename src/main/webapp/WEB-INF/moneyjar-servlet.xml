<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:tx="http://www.springframework.org/schema/tx"
        xmlns:aop="http://www.springframework.org/schema/aop"
        xmlns:mvc="http://www.springframework.org/schema/mvc"
        xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
                            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
                            http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
                            http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
                            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">

        <!-- Map resource requests to correct directory -->
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />
    <mvc:resources mapping="/resources/**" location="/resources/" />
     
    <!-- Enable Spring MVC Configuration Using Annotations and Content Negotiation-->
    <mvc:annotation-driven content-negotiation-manager="contentNegotiationManager" />

    <!-- Enable Spring Beans Auto-discovery -->
    <context:component-scan base-package="com.khominhvi.moneyjar" />
    
    <tx:annotation-driven transaction-manager="transactionManager"/>

	<!-- Define Which View Resolver To Use -->    
    <bean id="viewResolver"
    	class="org.springframework.web.servlet.view.InternalResourceViewResolver" >
        <property name="prefix" value="/" />
        <property name="suffix" value=".jsp" />
	</bean> 
    
    <!-- Define ContentNegotiationViewResolver -->
    <bean id="contentNegotiationManager"
             class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
    	<property name="defaultContentType" value="application/html" />
    	<property name="mediaTypes">
    	    <map>
    	        <entry key="json" value="application/json" />
    	    </map>
    	</property>
    </bean>
    
    <!-- Create environment variable for heroku postgres url -->
    <bean class="java.net.URI" id="dbUrl">
        <constructor-arg value="#{systemEnvironment['DATABASE_URL']}"/>
    </bean>
    
	<!-- Define datasource for heroku postgres -->
	<bean class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close" id="dataSource">
        <property name="driverClassName" value="org.postgresql.Driver"/>
        <property name="url" value="#{ 'jdbc:postgresql://' + @dbUrl.getHost() + ':' + @dbUrl.getPort() + @dbUrl.getPath()}"/>
        <property name="username" value="#{ @dbUrl.getUserInfo().split(':')[0] }"/>
        <property name="password" value="#{ @dbUrl.getUserInfo().split(':')[1] }"/>
	</bean>
    
	<!-- Configure session factory bean -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
	    <property name="dataSource" ref="dataSource" />
	    <property name="hibernateProperties">
	        <props>
	            <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
	            <prop key="hibernate.hbm2ddl.auto">create-drop</prop>
	            <prop key="hibernate.show_sql">true</prop>
	            <prop key="hibernate.format_sql">true</prop>
	            <prop key="hibernate.hbm2ddl.import_files">categories.sql,test-transactions.sql</prop>
	        </props>
	    </property>
	   	<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
    
	<!-- Declare Domain Beans -->
	<bean id="category" class="com.khominhvi.moneyjar.transaction.Category" />
	
    <bean id="transaction" class="com.khominhvi.moneyjar.transaction.Transaction" />
     
    <bean id="transactionDao" class="com.khominhvi.moneyjar.hibernate.TransactionDao" >
       	<constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
    </bean>
    <bean id="categoryDao" class="com.khominhvi.moneyjar.hibernate.CategoryDao" >
        <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
    </bean>
    <bean id="reportsDao" class="com.khominhvi.moneyjar.hibernate.ReportsDao" >
        <constructor-arg>
	        <ref bean="sessionFactory" />
	    </constructor-arg>
    </bean>
     
    <bean id="statementImporter" class="com.khominhvi.moneyjar.statement.StatementImporter">
        <property name="transactionDao" ref="transactionDao" />
    </bean>
     
    <bean id="duplicateManager" class="com.khominhvi.moneyjar.statement.DuplicateManager" >
        <property name="transactionDao" ref="transactionDao" />
    </bean>
     
    <bean id="csvParser" class="com.khominhvi.moneyjar.statement.CsvParser" />
    
    
    <!-- Declare Controller Beans -->
    
    <!-- Enable File Uploading - By Specifying Multipart Resolver -->
     <bean id="multipartResolver"
        class="org.springframework.web.multipart.support.StandardServletMultipartResolver">
	</bean>
	


</beans>